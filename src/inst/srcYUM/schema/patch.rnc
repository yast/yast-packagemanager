default namespace = "http://novell.com/package/metadata/suse/patch"
namespace ns1 = "http://novell.com/package/metadata/suse/common"
namespace ns2 = "http://linux.duke.edu/metadata/rpm"

element patch {
  attribute patchid { text },
  attribute timestamp { xsd:nonNegativeInteger },
  element name { text },
  element summary {
    attribute lang { text },
    text
  }+,
  element description {
    attribute lang { text },
    text
  }+,
  element version {
    attribute epoch { xsd:nonNegativeInteger },
    attribute ver { text },
    attribute rel { text }
  },
  element ns2:provides {
    element ns2:entry {
      attribute name { text },
      (attribute flags { "EQ" | "LE" | "GE" },
       attribute epoch { xsd:nonNegativeInteger },
       attribute ver { text },
       attribute rel { text }?)?,
      empty
    }+
  },
  element ns2:conflicts {
    element ns2:entry {
      attribute name { text },
      (attribute flags { "EQ" | "LE" | "GE" | "LT" | "GT" },
       attribute epoch { xsd:nonNegativeInteger },
       attribute ver { text },
       attribute rel { text }?)?,
      empty
    }+
  }?,
  element ns2:obsoletes {
    element ns2:entry {
      attribute name { text },
      (attribute flags { "EQ" | "LE" | "GE" | "LT" },
       attribute epoch { xsd:nonNegativeInteger },
       attribute ver { text },
       attribute rel { text }?)?,
      empty
    }+
  }?,
  element ns1:freshen {
    element ns1:entry {
      attribute name { text },
      (attribute flags { "EQ" | "LE" | "GE" | "LT" | "GT" },
       attribute epoch { xsd:nonNegativeInteger },
       attribute ver { text },
       attribute rel { text }?)?,
      empty
    }+
  }?,
  element ns2:requires {
    element ns2:entry {
      attribute name { text },
      (attribute flags { "EQ" | "LE" | "GE" | "LT" | "GT" },
       attribute epoch { xsd:nonNegativeInteger },
       attribute ver { text },
       attribute rel { text }?)?,
      attribute pre { "1" | "0" }?,
      empty
    }*
  },
  element category { "security" | "recommended" | "bonus" | "beta" },
  element reboot_needed { empty }?,
  element package_manager { empty }?,
  element atoms {
    element package {
      # TODO put the dependency stuff here
      empty
      # required for validator as long as dependency stuff is
      # missing
      
    }+,
    element script {
      element do { xsd:string },
      element undo { xsd:string }
      # TODO put the dependency stuff here
      
    }+,
    element message {
      attribute type { "OK" | "YesNo" },
      element text { xsd:string }
      # TODO put the dependency stuff here
      
    }+
  }
}
