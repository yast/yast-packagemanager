InstSrc Implementation

* What is InstSrc

InstSrc is the installation source, i.e. any provider of
installation data (selections, packages, patches).

* How to get the data

This data resides on a media. InstSrc uses MediaAccess
(see media/ directory) for access to the media.

* Caching data

In order to minimize real media access (which might be costly,
e.g. for ftp access), InstSrc abstracts away from the physical media
and tries to cache meta-information about the media contents.

This allows the packagemanager to handle media contents without
actually accessing the media for most of the usual tasks. It's up
to the InstSrc to decide which information to cache and which
information to retrieve from the media.

* Handling multiple medias

In order to handle multiple installation sources in parallel, the
installation source manager (InstSrcMgr) keeps track of 'known'
sources and their cached meta-information.

* InstSrc meta-information

- url		string, specifies access data for MediaAccess
- enabled	bool, a source might be temporarely disabled but still known
		to the manager
- priority	int, used to prefer sources, i.e. patch-server before cd
		this is used to determine which package to choose
- cost		int, cost of access
		this is used to determine where to get the package
- checksig	bool, if signatures are to be checked (GPG key known)
- mirror	string, filename of real url (for mirrors)
- label		string, user defined label
- MediaInfo	see MediaInfo (product, version, vendor, architectures, ...)


----------------------------------------------------------------------------

Implementation


Since we have different kind of installation media (cd, dvd, nfs, ftp, ...)
with different kind of contents (packages, patches, ...), an abstraction
class is required which gives an uniform access to the contents.

"InstSrc" implements this and keeps the following information

- access to media
  (cd, dvd, nfs, ...)
	(-> MediaAccessPtr)
- description of installation source
  (product, version, vendor, ...)
	(-> InstSrcDescrPtr)
- media contents
  (package list, selection list, patches list, ...)
	(-> InstSrcDataPtr)

The type of installation source (kind of content, i.e. installation Cd,
ftp update tree, directory with RPMs) is handled internally by InstSrcDescrPtr
and InstSrcDataPtr.
All the InstSrc gives outside is:

- description handler
  for use by the installation source mananger
	(-> getDescription())
- number of selections on media
	(-> numSelections())
- number of packages on media
	(-> numPackages())
- number of patches on media
	(-> numPatches())

- list of selections on media
	(-> getSelections())
- list of packages on media
	(-> getPackages())
- list of patches on media
	(-> getPatches())

